<script type="text/javascript">
    var CreateMasterTableDetailURL = '@Url.Action("CreateMasterTableDetail", "CommonTask", new { area = string.Empty })';
    var CreateMasterTableDetailForPayToURL = '@Url.Action("CreateMasterTableDetailForPayTo", "CommonTask", new { area = string.Empty })';
    var LoadCaseLevelURL = '@Url.Action("LoadCaseLevelByCaseId", "CommonTask", new { area = string.Empty })';
    var GetPayVoucherCreatedListURL = '@Url.Action("GetPayVoucherCreatedList", "CommonTask", new { area = string.Empty })';
    var LoadPayForURL = '@Url.Action("LoadPayFor", "CommonTask", new { area = string.Empty })';
    var GetCaseDetailSRURL = '@Url.Action("GetCaseDetailByCaseId", "CommonTask", new { area = string.Empty })';
    var CreatePayVoucherURL = '@Url.Action("PayVoucherCreate", "SessionRoll", new { area = string.Empty })';
    var PayForRemarks = "";
    var IsValidOfficeFileNo = true;
    var PVDetailTable;

    function ProcessAddClient() {
        if ($("#MstDesc").val() != "") {
            var url = "";
            var _MstDesc = ""
            var _MstParentId = 0;
            var _Remarks = "";

            if (parseInt($("#MstParentId").val()) == 214) {
                url = CreateMasterTableDetailForPayToURL;
                _MstDesc = $("#MstDesc").val();
                _MstParentId = parseInt($("#MstParentId").val());
                _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId };

            }
            else {
                if (PayForRemarks == "") {
                    $('#modal-AddMasterValue').modal('hide');
                    Swal.fire({
                        type: "error",
                        title: 'Error...',
                        html: 'PLEASE SELECT VOUCHER TYPE (O-REFUNDABLE, O-NON-REFUNDABLE)'
                    });
                }
                else if (PayForRemarks == "R") {
                    url = CreateMasterTableDetailURL;
                    _MstDesc = $("#MstDesc").val();
                    _MstParentId = 567;
                    _Remarks = "1";
                    _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId, Remarks: _Remarks };
                }
                else {
                    url = CreateMasterTableDetailURL;
                    _MstDesc = $("#MstDesc").val();
                    _MstParentId = parseInt($("#MstParentId").val());
                    _Remarks = PayForRemarks;
                    _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId, Remarks: _Remarks };

                }
            }

            console.log(parseInt($("#MstParentId").val()));
            console.log($("#MstDesc").val());

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: JSON.stringify(_parameters),
                url: url,
                success: function (Result) {

                    if (Result.Message == "Success") {
                        var newOption = new Option(Result.name, Result.id, true, true);
                        DDLToAppend.append(newOption).trigger('change');
                        $('#modal-AddMasterValue').modal('hide');

                    }
                    else {
                        $('#modal-AddMasterValue').modal('hide');
                        Swal.fire({
                            type: "error",
                            title: 'Error...',
                            html: Result.ErrorMessage
                        });
                    }
                }
            });
        }
        else {
            // Failed show errors
            console.log("Failed errors");
            Swal.fire({
                type: "error",
                title: 'Error...',
                html: 'Please Enter Description of List'
            });
        }
    }

    function GetCaseDetailSR(p_OfficeFileNo) {
        console.log(p_OfficeFileNo);

        _parameters = { OfficeFileNo: p_OfficeFileNo };
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(_parameters),
            url: GetCaseDetailSRURL,
            success: function (Result) {
                console.log(Result.CaseId);
                //console.log(Result.ClientName);
                //console.log(Result.length);

                if (Result.CaseId > 0) {
                    IsValidOfficeFileNo = true;
                    $("#CaseId").val(Result.CaseId);
                    $('#spanOfficeFileNoSessionRoll').text(Result.OfficeFileNo);
                    $('#spanClientNameSessionRoll').text(Result.ClientName);
                    $('#spanDefendantSessionRoll').text(Result.Defendant);
                    $("#div-CaseDetail").removeClass("AppHidden");

                    PayForRemarks = "R";
                    LoadPayFor(PayForRemarks);

                }
                else {
                    IsValidOfficeFileNo = false;
                    //var $select = $('#CourtType');
                    //$select.find('option').remove();
                    //<h4><span id="spanOfficeFileNo"></span><span class="YandSTitleSpacing">-</span><span id="spanClientName"></span><span class="YandSTitleSpacing">-</span><span id="spanDefendant"></span></h4>
                    $('#spanOfficeFileNoSessionRoll').text("");
                    $('#spanClientNameSessionRoll').text("");
                    $('#spanDefendantSessionRoll').text("");
                    Swal.fire({
                        type: "info",
                        title: 'INFO',
                        html: 'OFFICE FILE NO ' + p_OfficeFileNo + ' NOT FOUND IN DATABASE PLEASE MAKE SURE THE FILE NO IS CORRECT'
                    });
                    $('#OfficeFileNoSessionRollPV').val("");
                    $("#div-CaseDetail").removeClass("AppHidden").addClass("AppHidden");
                }
            },
            error: function (response) {
                console.log("error");

                console.log(response.responseText);
            },
            failure: function (response) {
                console.log("failure");
                console.log(response.responseText);
            }
        });
    }

    function LoadPayFor(p_Remarks) {
        //console.log(p_Remarks);

        _parameters = { P_Remark: p_Remarks };
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(_parameters),
            url: LoadPayForURL,
            success: function (Result) {
                //console.log(Result);
                //console.log(Result.length);

                if (Result.length > 0) {
                    var $select = $('#Payment_Head');
                    $select.find('option').remove();
                    var newOption = new Option("PLEASE SELECT", "0", true, true);
                    $select.append(newOption).trigger('change');

                    for (var i = 0; i < Result.length; i++) {
                        key = Result[i].Mst_Value;
                        value = Result[i].Mst_Desc;

                        //$select.append('<option value=' + key + '>' + value + '</option>');
                        var newOption = new Option(value, key, true, true);
                        $select.append(newOption).trigger('change');

                        //console.log("key :: " + key);
                        //console.log("value :: " + value);
                    }
                    $select.val("0").trigger('change');

                }
                else {
                    var $select = $('#Payment_Head');
                    $select.find('option').remove();

                    //Swal.fire({
                    //    type: "error",
                    //    title: 'Error...',
                    //    html: Result.ErrorMessage
                    //});
                }
            },
            error: function (response) {
                console.log("error");

                console.log(response.responseText);
            },
            failure: function (response) {
                console.log("failure");
                console.log(response.responseText);
            }
        });
    }

    function CalcTotal() {
        var p_Amt = $("#Amount").val() == "" ? 0 : parseFloat($("#Amount").val());
        var p_VarAmt = $("#VatAmount").val() == "" ? 0 : parseFloat($("#VatAmount").val());

        var p_TtlAmt = p_Amt + p_VarAmt;

        $("#TotalAmount").val(p_TtlAmt);

    }

    $(document).ready(function () {
        console.log("Payment Voucher Create");

        $select = $('#Payment_Head');
        $select.find('option').remove();
        var newOption = new Option("PLEASE SELECT", "0", true, true);
        $select.append(newOption).trigger('change');

        bsCustomFileInput.init();
        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            orientation: "bottom auto"
        });

        //$(".datepicker").datepicker("setDate", new Date());

        $('.select2bs4').select2({
            theme: 'bootstrap4'
        });

        console.log("OFFICE_FILE_NO");
        console.log($("#PV_OFFICE_FILE_NO").val());

        $('#OfficeFileNoSessionRollPV').val($("#PV_OFFICE_FILE_NO").val());
        var p_OfficeFileNo = $('#OfficeFileNoSessionRollPV').val();
        GetCaseDetailSR(p_OfficeFileNo);

        $("#Amount").val("");
        var IsDigitmask = new RegExp(/^\d*\.?(?:\d{1,3})?$/);
        $("#Amount").regexMask(IsDigitmask);

        $('.txtCalc').on("blur", function () { CalcTotal(); });

        $('#btnCreatePV').on("click", function () {
            /* Set Hidden Radio Values*/
            $("#VoucherType").val($('input[name="VoucherType"]:checked').val());


            //console.log($("#CaseId").val());
            //console.log($("#HFCaseId").val());

            //$("#CaseId").val($("#HFCaseId").val());
            console.log($("#CaseId").val());

            
            $("#Payment_Mode").val($('input[name="Payment_Mode"]:checked').val());

            if ($("#Payment_Head").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE SELECT PAY FOR'
                });
                return false;
            }

            if ($("#Payment_To").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE SELECT PAY TO'
                });
                return false;
            }


            console.log($("#Amount").val());
            if ($("#Amount").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE ENTER VALID AMOUNT.'
                });
                //Toast.fire({
                //    type: 'error',
                //    title: 'PLEASE ENTER VALID AMOUNT.'
                //});
                return false;

            }

            if ($("#BillNumber").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE ENTER REFERENCE NO.'
                });
                return false;
            }

            if ($("#uploadPVSupDocs")[0].files.length === 0) {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'SUPPORTING DOCUMENTS ARE REQUIRED.'
                });
                return false;
            }

            $("#modalPVFormoverlay").removeClass("overlay").addClass("overlay");
            $("#modalPVFormoverlay").removeClass("AppHidden");

            var data = new FormData(jQuery('#frm_PayVoucher')[0]);
            //console.log(data);
            $.ajax({
                type: "POST",
                url: CreatePayVoucherURL,
                data: data,
                cache: false,
                contentType: false,
                processData: false,
                beforeSend: function () {
                    $('modal-PVForm').block({
                        message: '<i class="fas fa-2x fa-sync-alt fa-spin"></i>'
                    });
                },
                success: function (result) {
                    if (result.redirectTo) {
                        Swal.fire({
                            type: 'success',
                            title: 'Done!',
                            html: "Data Save Successfully"
                        });
                        $('modal-PVForm').unblock();
                        //$(result.redirectTo).click();
                        $("#modalPVFormoverlay").removeClass("overlay");
                        $("#modalPVFormoverlay").removeClass("AppHidden");

                        $('#modal-PVForm').modal('hide');
                    } else {
                        // The server returned a partial view => let's refresh
                        // the corresponding section of our DOM with it
                        $("#PartialViewContainerBox").html(result);
                    }
                },
                error: function () {

                }
            });
        });

        $('.AddNewMaster').on("click", function () {
            console.log(this.id);
            console.log($(this).val());
            var ModalTitle = "";
            $("#MstParentId").val(this.id);

            if (this.id == "860") {
                ModalTitle = "ADD LAWYER";
                DDLToAppend = $("#LawyerId");
            }
            else if (this.id == "861") {
                ModalTitle = "ADD FOLLOWER";
                DDLToAppend = $("#FollowerId");
            }
            else if (this.id == "7") {
                ModalTitle = "Add Payment Head";
                DDLToAppend = $("#Payment_Head");
            }
            else if (this.id == "214") {
                ModalTitle = "Add Pay To";
                DDLToAppend = $("#Payment_To");
            }

            $("#ModalTitle").text(ModalTitle);

            $('#modal-AddMasterValue').modal('show');

        });

        if (typeof PVDetailTable != 'undefined')
            PVDetailTable.destroy();

        PVDetailTable = $('#tblPVDetail').DataTable({
            lengthChange: false,
            "dom": 't',
            ajax: {
                url: GetPayVoucherCreatedListURL,
                "dataSrc": "",
                type: 'POST',
                data: function (d) {
                    d.P_OfficeFileNo = p_OfficeFileNo;
                }
            },
            "columns": [
                { data: 'CaseLevel' },
                { data: 'PaymentHeadName' },
                { data: 'PaymentToName' },
                { data: 'TotalAmount' },
                { data: 'W_D_Date' }
            ],
            //"columnDefs": [{ 'orderable': false, "targets": "_all" }],
            "order": [],
            "columnDefs": [{
                "targets": [0, 1, 2, 3, 4],
                "orderable": false
            }]
        });

    });
</script>

@model YandS.UI.Models.PayVoucher
<div class="card card-primary">
    <div class="card-header ENF_BasicInfoBanner">
        <div class="text-center">
            <span class="h3">
                EXPENSES طلب رسوم
            </span>
        </div>
    </div>
    <div id="div-CaseDetail" class="">
        <div class="card-header bg-maroon">
            <div class="text-center">
                <h4><span id="spanOfficeFileNoSessionRoll">@Html.DisplayFor(model => model.OfficeFileNo)</span><span class="YandSTitleSpacing">-</span><span id="spanClientNameSessionRoll">@Html.DisplayFor(model => model.ClientName)</span><span class="YandSTitleSpacing">-</span><span id="spanDefendantSessionRoll">@Html.DisplayFor(model => model.Defendant)</span></h4>
            </div>
        </div>
    </div>
    <!-- /.card-header -->
    <!-- form start -->
    <div class="card-body">
        @using (Html.BeginForm("PayVoucherCreateRefNonRef", "Finance", FormMethod.Post, new { id = "frm_PayVoucher", enctype = "multipart/form-data", onsubmit = "return onPreSubmit(this);" }))
        {
            @Html.AntiForgeryToken()


        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Payment_Type, new { @Value = "1" })
            @Html.HiddenFor(model => model.Payment_Mode)
            @Html.HiddenFor(model => model.VoucherType)
            @Html.HiddenFor(model => model.Status, new { @Value = "0" })
            @Html.HiddenFor(model => model.VoucherStatus, new { @Value = "0" })
            @Html.HiddenFor(model => model.LocationCode, new { @Value = "0" })
            @Html.HiddenFor(model => model.Credit_Account, new { @Value = 0 })
            @Html.HiddenFor(model => model.TransTypeCode, new { @Value = "-2" })
            @Html.HiddenFor(model => model.TransReasonCode, new { @Value = "0" })
            @Html.HiddenFor(model => model.CaseInvoices)
            @Html.HiddenFor(model => model.CourtType, new { @Value = "6" })
            @Html.HiddenFor(model => model.OfficeFileNoSessionRollPV)
            @Html.HiddenFor(model => model.VatAmount)
            @Html.HiddenFor(model => model.TotalAmount)
            @Html.HiddenFor(model => model.CaseId)

            <div class="col-12">
                <div class="row text-center">
                    <div class="col-6">
                        <div class="form-group clearfix">
                            <div style="padding-right:15px" class="icheck-primary d-inline">
                                @Html.RadioButtonFor(m => m.VoucherType, "1", new { id = "VoucherType1", @checked = "checked" })
                                <label for="VoucherType1">REFUNDABLE</label>
                            </div>
                            <div class="icheck-primary d-inline">
                                @Html.RadioButtonFor(m => m.VoucherType, "2", new { id = "VoucherType2", disabled = "disabled" })
                                <label for="VoucherType2">NON-REFUNDABLE</label>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="form-group clearfix">
                            <div style="padding-right:10px" class="icheck-primary d-inline">
                                @Html.RadioButtonFor(m => m.Payment_Mode, "1", new { id = "Payment_Mode1", disabled = "disabled" })
                                <label for="Payment_Mode1">CHEQUE</label>
                            </div>
                            <div class="icheck-primary d-inline">
                                @Html.RadioButtonFor(m => m.Payment_Mode, "2", new { id = "Payment_Mode2", disabled = "disabled" })
                                <label for="Payment_Mode2">CASH</label>
                            </div>
                            <div style="padding-left:10px" class="icheck-primary d-inline">
                                @Html.RadioButtonFor(m => m.Payment_Mode, "3", new { id = "Payment_Mode3", @checked = "checked" })
                                <label for="Payment_Mode3">BANK TRANSFER</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-4">
                    <div class="col-sm-12">
                        <div class="row">
                            <label for="Payment_Head">PAY FOR سبب الدفع</label>
                            <div class="input-group mb-3">
                                @Html.DropDownList("Payment_Head", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-info AddNewMaster" id="7">
                                        ADD
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label for="Amount">AMOUNT المبلغ المطلوب</label>
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control txtCalc" } })
                    </div>
                </div>
                <div class="col-4">
                    <div class="col-sm-12">
                        <div class="row">
                            <label for="Payment_To">PAY TO يدفع إلى</label>
                            <div class="input-group mb-3">
                                @Html.DropDownList("Payment_To", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                <div class="input-group-append">
                                    <button title="ADD EXCEPT EMPLOYEE AND LOCATION" type="button" class="btn btn-info AddNewMaster" id="214">
                                        ADD
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-3">
                    <div class="form-group">
                        <label for="BillNumber">REFERENCE NO. رقم الدعوى</label>
                        @Html.EditorFor(model => model.BillNumber, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label for="UploadedFile">SUPPORTING DOCUMENT تحميل المستند</label>
                        <div class="input-group">
                            <div class="custom-file">
                                <input type="file" class="custom-file-input" id="uploadPVSupDocs" name="uploadPVSupDocs">
                                <label class="custom-file-label" for="uploadPVSupDocs">CHOOSE DOCUMENT</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-3">

                </div>
            </div>
        </div>
        }

    </div>
    <div class="card-header bg-gradient-purple">
        <h3 class="card-title">ALREADY CREATED PAYMENT VOUCHER</h3>
    </div>
    <div class="card-body">
        <table id="tblPVDetail" class="table table-bordered table-striped dataTable dt-responsive nowrap" style="width:100%">
            <thead>
                <tr>
                    <th>CASE LEVEL</th>
                    <th>PAY FOR</th>
                    <th>PAY TO</th>
                    <th>AMOOUNT</th>
                    <th>W/D DATE</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <div class="card-footer text-center">
        <button type="button" id="btnCreatePV" class="btn btn-secondary"><i class="fas fa-save"></i> SAVE</button>
    </div>
</div>