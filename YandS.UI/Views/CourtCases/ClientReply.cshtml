<script type="text/javascript">
    var table;
    var dataForTable = "ENF-CLREPLY";
    $(document).ready(function () {
        if (typeof table != 'undefined')
            table.destroy();

        table = $('#HtmlTable').DataTable({
            "processing": true,
            "serverSide": true,
            "filter": true,
            "orderMulti": false,
            "destroy": true,
            "ordering": true,
            "pageLength": 99999,
            dom: "<'row'<'col-sm-1'l><'col-sm-1 text-right'B><'col-sm-10 text-right'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-5'i><'col-sm-7'p>>",
            buttons: [
                {
                    extend: 'excel',
                    title: 'CLIENT REPLY',
                    text: 'Print',
                    titleAttr: 'Export Excel',
                    "oSelectorOpts": { filter: 'applied', order: 'current' },
                    exportOptions: { modifier: { page: 'all', search: 'none' } }
                }
            ],
            "lengthMenu": [[5, 10, 25, 50, 100, 99999], [5, 10, 25, 50, 100, 'ALL']],
            "ajax": {
                "url": GetIndexDataURL,
                "type": "POST",
                "datatype": "json",
                data: function (d) {
                    d.DataTableName = dataForTable;
                    d.LocationId = $('#txtUserRole').val() == "VoucherApproval" ? $('input[name="rdoLocation"]:checked').val() : $('#txtLocationId').val();
                }
            },
            "columns": [
                { data: 'UserNo', name: 'UserNo', autoWidth: true },
                { data: 'OfficeFileNo', name: 'OfficeFileNo', autoWidth: true },
                { data: 'ClientName', name: 'ClientName', autoWidth: true },
                { data: 'DefClientName', name: 'DefClientName', autoWidth: true },
                { data: 'ClientFileNo', name: 'ClientFileNo', autoWidth: true },
                { data: 'AccountContractNo', name: 'AccountContractNo', autoWidth: true },
                { data: 'CaseLevelName', name: 'CaseLevelName', autoWidth: true },
                { data: 'CurrentEnforcementLevel', name: 'CurrentEnforcementLevel', autoWidth: true },
                { data: 'COURT', name: 'COURT', autoWidth: true },
                { data: 'CourtRefNo', name: 'CourtRefNo', autoWidth: true },
                { data: 'DaysCounter', name: 'DaysCounter', autoWidth: true },
                { data: 'CourtDecision', name: 'CourtDecision', autoWidth: true },
                { data: 'Requirements', name: 'Requirements', autoWidth: true },
                { data: 'FirstEmailDate', name: 'FirstEmailDate', autoWidth: true },
                {
                    data: null,
                    render: function (data, type, row) {
                        if (type === 'display') {

                            return '<a class="btn btn-info btn-sm btnLink" title="" id="M_' + row.CaseId + '" href="javascript:void(0)" data-original-title="Enforcement Management"><i class="fas fa-pencil-alt"></i></a>';
                        }
                        return data;
                    },
                    className: "project-actions text-right"
                }],
            "order": [],
            "columnDefs": [
                { 'orderable': false, 'targets': '_all' },
                { "className": "dt-center", "targets": "_all" },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 2
                },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 3
                },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 4
                },
                {
                    render: function (data, type, full, meta) {
                        //console.log(data.replace(/\W+/g, " "));
                        if (data) {
                            if (data.length > 30)
                                return "<div class='text-wrap'>" + data.replace(/\W+/g, " ") + "</div>";
                            else
                                return "<div class='text-wrap'>" + data + "</div>";
                        }
                        else
                            return "";
                    },
                    targets: 5
                },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 6
                },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 7
                },
                {
                    render: function (data, type, full, meta) {
                        return "<div class='text-wrap'>" + data + "</div>";
                    },
                    targets: 8
                },
                {
                    targets: 11, render: function (data) {
                        if (data) {
                            return "<div dir = 'auto' class='text-right text-wrap'>" + data.replace(/(\r\n|\n|\r)/g, "<br />"); +"</div>";
                        }
                        else
                            return "";
                    }
                },
                {
                    targets: 12, render: function (data) {
                        if (data) {
                            return "<div dir = 'auto' class='text-right text-wrap'>" + data.replace(/(\r\n|\n|\r)/g, "<br />"); +"</div>";
                        }
                        else
                            return "";
                    }
                },
                {
                    render: function (data) {
                        if (data)
                            return moment(data).format('DD/MM/YYYY');
                        else
                            return "";
                    },
                    targets: 13
                }
            ],
            "drawCallback": function (settings) {
                $("#ENF_ModificationContainer").empty();
            },
            initComplete: function () {
                console.log("DataTable Initiated !!");
                $('.btn').bstooltip();

                var info = table.page.info();

                var MCTRecords = table.ajax.json().MuscatTotal;
                var SLLRecords = table.ajax.json().SalalahTotal;
                var recordsTotal = table.ajax.json().recordsTotal;



                console.log("MUSCAT TOTAL " + MCTRecords);
                console.log("SALALAH TOTAL " + SLLRecords);
                $('#TTL').text(recordsTotal);

                if ($("#txtUserRole").val() == "VoucherApproval") {
                    $('#MCTTTL').text("MUSCAT : " + MCTRecords);
                    $('#SLLTTL').text("SALALAH : " + SLLRecords);
                }

                $(".dataTables_filter input")
                    .unbind() // Unbind previous default bindings
                    .bind("keyup", function (e) { // Bind our desired behavior
                        //console.log(e.keyCode);
                        // this.value.length >= 3 || If the length is 3 or more characters, or the user pressed ENTER, search
                        if (e.keyCode == 13) {
                            // Call the API search function
                            table.search(this.value).draw();
                        }
                        // Ensure we clear the search if they backspace far enough
                        if (this.value == "") {
                            table.search("").draw();
                        }
                        return;
                    });
            }
        });

        $('.table tbody').on('click', '.btnLink', function () {
            var _Mode = this.id.split('_')[0];
            var _id = parseInt(this.id.split('_')[1]);

            var data = table.row($(this).parents('tr')).data();

            processbtnLinkClick(_Mode, data, dataForTable);
            return false;
        });
    });
</script>
<div style="padding-bottom:0px;padding-top:10px;" class="row ClientReplyActive">
    <div class="col-sm-3 text-left"><h3><span id="MCTTTL"></span></h3></div>
    <div class="col-sm-6 text-center"><h3>CLIENT REPLY متابعة رد الموكل</h3></div>
    <div class="col-sm-3 text-right"><h3><span id="SLLTTL"></span></h3></div>
</div>
<div style="padding-bottom:0px;padding-top:10px;" class="row ClientReplyActive">
    <div class="col-sm-12 text-center"><h3><span id="TTL"></span></h3></div>
</div>
<div class="row">
    <div style="padding-bottom:0px;padding-top:10px;" class="col-sm-12">

        <table id="HtmlTable" class="table table-bordered dataTable dt-responsive nowrap" style="width:100%">
            <thead>
                <tr>
                    <th style="width:30px !important" class="VMiddle text-center">USER<br />NO.</th>
                    <th style="width:30px !important" class="all VMiddle text-center">FILE<br />NO.</th>
                    <th style="width:100px !important" class="VMiddle text-center">CLIENT NAME</th>
                    <th style="width:100px !important" class="VMiddle text-center">NAME</th>
                    <th style="width:90px !important">CLIENT FILE NO</th>
                    <th style="width:90px !important">A/C NO</th>
                    <th style="width:90px !important">LEVEL</th>
                    <th class="VMiddle text-center">STAGE<br />المرحلة</th>
                    <th class="VMiddle text-center">COURT</th>
                    <th class="VMiddle text-center">CASE NO.</th>
                    <th style="width:30px !important" class="VMiddle text-center">D.C<br />UPDATE</th>
                    <th class="VMiddle text-center">UPDATE</th>
                    <th class="VMiddle text-center">المطلوب من الموكل<br />REQUIREMENT</th>
                    <th style="width:50px !important" class="VMiddle text-center">تاريخ الطلب<br />SEND DATE</th>
                    <th style="width:15px !important" class="all"></th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
</div>
