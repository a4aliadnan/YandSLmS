@model YandS.UI.Models.PayVoucher
@{
    ViewBag.Title = "Y & S Associates - Payment Voucher Create";
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>INTRA-TRANSACTION</h1>
                </div>
                <div class="col-sm-6">
                    @*<ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item">Finance</li>
                        <li class="breadcrumb-item">Payment Voucher</li>
                        <li class="breadcrumb-item active"><a href="#">New Voucher</a></li>
                    </ol>*@
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </section>

    <!-- Main content -->
    <section class="content">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return onPreSubmit(this);" }))
        {
            @Html.AntiForgeryToken()
            <div class="card card-primary">
                <div class="card-header bg-maroon">
                    <h3 class="card-title">CREATE INTRA-TRANSACTION</h3>
                    <div class="float-right">
                        Transaction Date : @ViewBag.VoucherDate
                    </div>
                </div>
                <!-- /.card-header -->
                <!-- form start -->
                <div class="card-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Payment_Type, new { @Value = "2" })
                        @Html.HiddenFor(model => model.Payment_Mode, new { @Value = "1" })
                        @Html.HiddenFor(model => model.VoucherType, new { @Value = "3" })
                        @Html.HiddenFor(model => model.Status, new { @Value = "0" })
                        @Html.HiddenFor(model => model.VoucherStatus, new { @Value = "0" })
                        @Html.HiddenFor(model => model.CourtType, new { @Value = "0" })
                        @Html.HiddenFor(model => model.LocationCode, new { @Value = "0" })
                        @Html.HiddenFor(model => model.Payment_Head, new { @Value = "0" })
                        @Html.HiddenFor(model => model.Payment_To, new { @Value = "0" })
                        <div class="col-12">
                            <div class="row">
                                <div class="col-4">
                                    <div class="col-sm-12">
                                        <div class="row">
                                            <label for="Payment_Head">TRANSACTION TYPE</label>
                                            <div class="input-group mb-3">
                                                @Html.DropDownList("TransTypeCode", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                                <div class="input-group-append">
                                                    <button type="button" class="btn btn-info AddNewMaster" id="401">
                                                        ADD
                                                    </button>
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.TransTypeCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="col-sm-12">
                                        <div class="row">
                                            <label for="Payment_Head">TRANSACTION REASON</label>
                                            <div class="input-group mb-3">
                                                @Html.DropDownList("TransReasonCode", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                                <div class="input-group-append">
                                                    <button type="button" class="btn btn-info AddNewMaster" id="402">
                                                        ADD
                                                    </button>
                                                </div>
                                            </div>
                                            @Html.ValidationMessageFor(model => model.TransReasonCode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div style="padding-top:30px" class="col-4 text-center">
                                    <div class="form-group clearfix">
                                        <div style="padding-right:10px" class="icheck-primary d-inline">
                                            @Html.RadioButtonFor(m => m.Payment_Mode, "1", new { id = "Payment_Mode1" })
                                            <label for="Payment_Mode1">CHEQUE</label>
                                        </div>
                                        <div class="icheck-primary d-inline">
                                            @Html.RadioButtonFor(m => m.Payment_Mode, "2", new { id = "Payment_Mode2" })
                                            <label for="Payment_Mode2">CASH</label>
                                        </div>
                                        <div style="padding-left:10px" class="icheck-primary d-inline">
                                            @Html.RadioButtonFor(m => m.Payment_Mode, "3", new { id = "Payment_Mode3" })
                                            <label for="Payment_Mode3">BANK TRANSFER</label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="Debit_Account">TRANSACTION FROM </label>
                                        @Html.DropDownList("Debit_Account", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                        @Html.ValidationMessageFor(model => model.Debit_Account, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="col-3">
                                    <div class="form-group">
                                        <label for="Credit_Account">TRANSACTION TO</label>
                                        @Html.DropDownList("Credit_Account", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                        @Html.ValidationMessageFor(model => model.Credit_Account, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Amount)
                                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control txtCalc" } })
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.VatAmount)
                                        @Html.EditorFor(model => model.VatAmount, new { htmlAttributes = new { @class = "form-control txtCalc" } })
                                    </div>
                                </div>
                                <div class="col-2">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TotalAmount)
                                        @Html.EditorFor(model => model.TotalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-8">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Remarks)
                                        @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>

                                </div>
                                <div class="col-4">
                                    <div class="form-group">
                                        <label for="UploadedFile">SUPPORTING DOCUMENT</label>
                                        <div class="input-group">
                                            <div class="custom-file">
                                                <input type="file" class="custom-file-input" id="upload" name="upload" data-val="true" data-val-required="SUPPORTING DOCUMENTS ARE REQUIRED.">
                                                <label class="custom-file-label" for="upload">CHOOSE DOCUMENT</label>
                                            </div>
                                        </div>
                                        <span class="text-danger" data-valmsg-for="upload" data-valmsg-replace="true"></span>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
                <div class="card-footer">
                    <button type="submit" class="btn btn-success"><i class="fas fa-save"></i> Save</button> |
                    <a class="btn btn-primary" href="@Url.Action("PayVoucherIndex", "Finance", new { id = 3 })"><i class="fas fa-home"></i> Back to Main</a>
                </div>
            </div>

        }
    </section>
    <!-- /.content -->
    <div class="modal fade" id="modal-AddMasterValue">
        <div class="modal-dialog">
            <div class="modal-content bg-gradient-light">
                <div class="modal-header">
                    <h4 class="modal-title"><span id="ModalTitle">Add Client</span></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="MstParentId" class="form-control" value="@ViewBag.MstParentId" />
                    <input type="text" id="MstDesc" class="form-control" placeholder="Enter New Description" />
                </div>
                <div class="modal-footer justify-content-between">
                    <button type="button" class="btn btn-outline-dark" data-dismiss="modal">Close</button>
                    <button type="button" onclick="ProcessAddClient()" class="btn btn-outline-dark">Save changes</button>
                </div>
            </div>
            <!-- /.modal-content -->
        </div>
        <!-- /.modal-dialog -->
    </div>

</div>


@section pagespecific {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        var CreateMasterTableDetailURL = '@Url.Action("CreateMasterTableDetail", "CommonTask", new { area = string.Empty })';

        function onPreSubmit(item) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

            $("#Payment_Mode").val($('input[name="Payment_Mode"]:checked').val());

            if ($("#Payment_Mode").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'Please Select Payment Mode (O-Cheque, O-Cash OR O-Bank Transfer)'
                });
                return false;
            }

            if ($("#TransTypeCode").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'PLEASE SELECT TRANSACTION TYPE'
                });
                return false;
            }

            if ($("#TransReasonCode").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'PLEASE SELECT TRANSACTION REASON'
                });
                return false;
            }

            if ($("#Debit_Account").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'PLEASE SELECT PAY FROM'
                });
                return false;
            }

            if ($("#Credit_Account").val() == "0") {
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'PLEASE SELECT PAY TO'
                });
                return false;
            }

            console.log($("#Amount").val());
            if ($("#Amount").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE ENTER VALID AMOUNT.'
                });
                //Toast.fire({
                //    type: 'error',
                //    title: 'PLEASE ENTER VALID AMOUNT.'
                //});
                return false;

            }
        }

        function ProcessAddClient() {
            if ($("#MstDesc").val() != "") {
                var url = "";
                var _MstDesc = ""
                var _MstParentId = 0;
                var _Remarks = "";

                if (parseInt($("#MstParentId").val()) == 214) {
                    url = CreateMasterTableDetailForPayToURL;
                    _MstDesc = $("#MstDesc").val();
                    _MstParentId = parseInt($("#MstParentId").val());
                    _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId };

                }
                else {
                    url = CreateMasterTableDetailURL;
                    _MstDesc = $("#MstDesc").val();
                    _MstParentId = parseInt($("#MstParentId").val());
                    _Remarks = "R";
                    _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId, Remarks: _Remarks };
                }

                console.log(parseInt($("#MstParentId").val()));
                console.log($("#MstDesc").val());

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(_parameters),
                    url: url,
                    success: function (Result) {

                        if (Result.Message == "Success") {
                            var newOption = new Option(Result.name, Result.id, true, true);
                            DDLToAppend.append(newOption).trigger('change');
                            $('#modal-AddMasterValue').modal('hide');

                        }
                        else {
                            $('#modal-AddMasterValue').modal('hide');
                            Swal.fire({
                                type: "error",
                                title: 'Error...',
                                html: Result.ErrorMessage
                            });
                        }
                    }
                });
            }
            else {
                // Failed show errors
                console.log("Failed errors");
                Swal.fire({
                    type: "error",
                    title: 'Error...',
                    html: 'Please Enter Description of List'
                });
            }
        }

        function CalcTotal() {
            var p_Amt = $("#Amount").val() == "" ? 0 : parseFloat($("#Amount").val());
            var p_VarAmt = $("#VatAmount").val() == "" ? 0 : parseFloat($("#VatAmount").val());

            var p_TtlAmt = p_Amt + p_VarAmt;

            $("#TotalAmount").val(p_TtlAmt);

        }

        $(document).ready(function () {
            console.log("Payment Voucher Create");
            bsCustomFileInput.init();

            var IsDigitmask = new RegExp(/^\d*\.?(?:\d{1,3})?$/);
            $("#Amount").regexMask(IsDigitmask);
            $("#VatAmount").regexMask(IsDigitmask);

            $('.txtCalc').on("blur", function () { CalcTotal(); });

            $("#Amount").val("");

            $('.AddNewMaster').on("click", function () {
                console.log(this.id);
                console.log($(this).val());
                var ModalTitle = "";
                $("#MstParentId").val(this.id);

                if (this.id == "401") {
                    ModalTitle = "Add Transaction Type";
                    DDLToAppend = $("#TransTypeCode");
                }
                else if (this.id == "402") {
                    ModalTitle = "Add Transaction Reason";
                    DDLToAppend = $("#TransReasonCode");
                }


                $("#ModalTitle").text(ModalTitle);

                $('#modal-AddMasterValue').modal('show');

            });

        });
    </script>
}