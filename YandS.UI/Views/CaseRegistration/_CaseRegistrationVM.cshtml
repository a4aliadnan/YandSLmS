<script type="text/javascript">
    var CreateMasterTableDetailURL = '@Url.Action("CreateMasterTableDetail", "CommonTask", new { area = string.Empty })';
    var CreateMasterTableDetailForPayToURL = '@Url.Action("CreateMasterTableDetailForPayTo", "CommonTask", new { area = string.Empty })';
    var GetCaseDetailURL = '@Url.Action("GetCaseDetailByCaseId", "CommonTask", new { area = string.Empty })';
    var GetRegisterCourtURL = '@Url.Action("GetRegisterCourtDetail", "CommonTask", new { area = string.Empty })';
    var LoadFileStatusURL = '@Url.Action("LoadFileStatusddl", "CommonTask", new { area = string.Empty })';
    var GetEnforcementDetailURL = '@Url.Action("GetEnforcementDetail", "CommonTask", new { area = string.Empty })';
    var ValidationMessage = "";
    var NotValid = false;

    var _parameters = {};
    var DDLToAppend;
    function submitForm() {
        var form = document.getElementById("frm_CaseRegister");
        form.submit();
    }
    var IsValidOfficeFileNo = true;
    function ResetHiddenItems() {
        $("#hidRequirement").val("");
        $("#hidFirstEmailDate").val("");
        $("#hidNextHearingDate").val("");
        $("#hidCourtDecisionChange").val("");
        $("#hidCurrentHearingDate").val("");
    }
    function ValidateUpdateDate() {
        console.log("ValidateUpdateDate()");
        var ValidationMessage = "";
        var NotValid = false;

        if ($("#hidCourtDecisionChange").val() == "Y") {
            var Msg = "لم تقم بتحديث التاريخ" + "<br />" + "PLEASE CHANGE THE DATE";

            if ($("#CurrentHearingDate").val() == "") {

                NotValid = true;
                ValidationMessage = ValidationMessage == "" ? Msg : ValidationMessage + "<br />" + Msg;
            }

            if ($("#CurrentHearingDate").val() == $("#hidCurrentHearingDate").val()) {

                NotValid = true;
                ValidationMessage = ValidationMessage == "" ? Msg : ValidationMessage + "<br />" + Msg;
            }
        }

        return NotValid;
    }
    function ValidateNextHearingDate() {
        console.log("ValidateNextHearingDate()");
        if ($("#hidNextHearingDate").val() == "") {

        }
        else {
            var Msg = "الرجاء التأكد من تاريخ الجلسة القادمة" + "<br />" + "PLEASE CHECK SESSION DATE";

            var ValidDays = [0, 7, 14, 21, 28, 35, 42, 49, 54, 63, 70];
            var dtLastDate = moment(moment($("#hidNextHearingDate").val(), 'DD/MM/YYYY').format("YYYY-MM-DD"));
            var currDate = moment(moment($("#NextHearingDate").val(), 'DD/MM/YYYY').format("YYYY-MM-DD"));
            var result = currDate.diff(dtLastDate, 'days');

            console.log(dtLastDate);
            console.log(currDate);
            console.log(result);

            if (ValidDays.indexOf(result) == -1) {
                NotValid = true;
                ValidationMessage = ValidationMessage == "" ? Msg : ValidationMessage + "<br />" + Msg;

            }
        }

        return NotValid;
    }


    function onPreSubmit(item) {
        console.log("function onPreSubmit()");
        console.log($("#HFCaseId").val());

        $("#CaseId").val(parseInt($("#HFCaseId").val()));

        if ($("#OfficeFileNo").val() == "") {
            Swal.fire({
                type: "error",
                title: 'ERROR...',
                html: 'PLEASE ENTER VALID OFFICE FILE NUMBER'
            });
            return false;
        }

        if ($("#div-CaseDetail").hasClass("AppHidden")) {
            Swal.fire({
                type: "error",
                title: 'ERROR...',
                html: 'PLEASE CLICK ON SEARCH BUTTON TO VALIDATE OFFICE FILE NUMBER'
            });
            return false;
        }

        if ($("#ActionLevel").val() == "" || $("#ActionLevel").val() == "0") {
            Swal.fire({
                type: "error",
                title: 'ERROR...',
                html: 'PLEASE SELECT ACTION LEVEL'
            });
            return false;
        }

        if ($("#FileStatus").val() == "" || $("#FileStatus").val() == "0") {
            Swal.fire({
                type: "error",
                title: 'ERROR...',
                html: 'PLEASE SELECT FILE STATUS'
            });
            return false;
        }

        if ($("#FileStatus").val() != "11") {
            if ($("#ActionDate").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE ENTER ACTION DATE'
                });
                return false;
            }

            if ($("#AdminFile").val() == "") {
                Swal.fire({
                    type: "error",
                    title: 'ERROR...',
                    html: 'PLEASE ENTER ADMIN DETAIL'
                });
                return false;
            }

            //if ($("#OfficeProcedure").val() == "") {
            //    Swal.fire({
            //        type: "error",
            //        title: 'ERROR...',
            //        html: 'PLEASE ENTER NOTES'
            //    });
            //    return false;
            //}


            if ($("#ActionLevel").val() == "1") {

            }
            else if ($("#ActionLevel").val() == "2" || $("#ActionLevel").val() == "3") {
                if ($("#JudgementDate").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER JUDGEMENT DATE'
                    });
                    return false;
                }

                if ($("#ActionLevel").val() == "2") {
                    if ($("#DepartmentType").val() == "" || $("#DepartmentType").val() == "0") {
                        Swal.fire({
                            type: "error",
                            title: 'ERROR...',
                            html: 'PLEASE SELECT DEPARTEMENT TYPE'
                        });
                        return false;
                    }
                }


            }
            else if ($("#ActionLevel").val() == "4") {
                if ($("#EnforcementDispute").val() == "" || $("#EnforcementDispute").val() == "0") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE SELECT ENFORCEMENT DISPUTE'
                    });
                    return false;
                }
                else if ($("#EnforcementDispute").val() == "1" || $("#EnforcementDispute").val() == "3") {
                    if ($("#JudgementDate").val() == "") {
                        Swal.fire({
                            type: "error",
                            title: 'ERROR...',
                            html: 'PLEASE ENTER DATE OF RECEIPT DECISION'
                        });
                        return false;
                    }
                }
                else if ($("#EnforcementDispute").val() == "2" || $("#EnforcementDispute").val() == "4") {
                    if ($("#JudgementDate").val() == "") {
                        Swal.fire({
                            type: "error",
                            title: 'ERROR...',
                            html: 'PLEASE ENTER PRIMARY JUG. DATE'
                        });
                        return false;
                    }
                }
            }


            if ($("#FileStatus").val() == "2") {
                if ($("#SendDate").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER SEND DATE'
                    });
                    return false;
                }

                if ($("#OmanPostNo").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER OMAN POST NO'
                    });
                    return false;
                }

                if ($("#FirstReminderDate").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER REMINDER DATE'
                    });
                    return false;
                }

                if ($('#upload').get(0).files.length === 0) {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ATTACH OMAN POST DOCUMENT'
                    });
                    return false;
                }
            }
            else if ($("#FileStatus").val() == "4") {
                if ($("#OnHoldReasonDDL").val() == "" || $("#OnHoldReasonDDL").val() == "0") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE SELECT ON HOLD REASON'
                    });
                    return false;
                }
            }
            else if ($("#FileStatus").val() == "6") {

                if ($("#ActionLevel").val() == "1" || $("#ActionLevel").val() == "2") {
                    if ($("#CourtRegistration").val() == "" || $("#CourtRegistration").val() == "0") {
                        Swal.fire({
                            type: "error",
                            title: 'ERROR...',
                            html: 'PLEASE SELECT COURT REGISTRATION'
                        });
                        return false;
                    }
                }

                if ($("#FileStatusRemarks").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER ELECTRONIC NO.'
                    });
                    return false;
                }

                if ($('input[name="RealEstateYesNo"]:checked').val() == "Y") {
                    if ($("#RealEstateDetail").val() == "") {
                        Swal.fire({
                            type: "error",
                            title: 'ERROR...',
                            html: 'PLEASE ENTER REAL ESTATE DETAIL.'
                        });
                        return false;
                    }
                }
            }
            else if ($("#FileStatus").val() == "7") {
                if ($("#CourtMessage").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER COURT MESSAGE'
                    });
                    return false;
                }
            }
            else if ($("#FileStatus").val() == "8") {

                if ($("#Amount").val() == "") {
                    $("#Amount").val("0");
                }

                if ($("#FileStatusRemarks").val() == "") {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE ENTER FEE'
                    });
                    return false;
                }

            }
        }

        var ValidationMessage = "";
        var NotValid = false;

        console.log($("#hidCourtDecisionChange").val());
        console.log($("#CurrentHearingDate").val());
        console.log($("#hidCurrentHearingDate").val());

        NotValid = ValidateUpdateDate();

        if (NotValid) {
            Swal.fire({
                title: 'Are you sure?',
                html: ValidationMessage,
                type: 'info',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'تغييرالتاريخ والحفظ CHANGE',
                cancelButtonText: 'حفظ بدون تغيير CONTUNUE',
            }).then((result) => {
                if (result.value) {

                    $("#CurrentHearingDate").datepicker("setDate", new Date).datepicker({
                        format: 'dd/mm/yyyy',
                        autoclose: true
                    });

                    ValidationMessage = "";
                    NotValid = false;

                    NotValid = ValidateNextHearingDate();

                    if (NotValid) {
                        Swal.fire({
                            title: 'Are you sure?',
                            html: ValidationMessage,
                            type: 'info',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'SAVE حفظ',
                            cancelButtonText: 'BACK عودة',
                        }).then((result) => {
                            if (result.value) {
                                submitForm();
                            }
                            else {
                                return false;
                            }
                        });
                    }
                    else {
                        submitForm();
                    }
                }
                else {
                    submitForm();
                }
            });
        }
        else {
            NotValid = ValidateNextHearingDate();

            if (NotValid) {
                Swal.fire({
                    title: 'Are you sure?',
                    html: ValidationMessage,
                    type: 'info',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'SAVE حفظ',
                    cancelButtonText: 'BACK عودة',
                }).then((result) => {
                    if (result.value) {
                        submitForm();
                    }
                    else {
                        return false;
                    }
                });
            }
            else {
                submitForm();
            }
        }

        return false;
    }

    function ProcessAddClient() {
        if ($("#MstDesc").val() != "") {
            var url = "";
            var _MstDesc = ""
            var _MstParentId = 0;
            var _Remarks = "";

            if (parseInt($("#MstParentId").val()) == 214) {
                url = CreateMasterTableDetailForPayToURL;
                _MstDesc = $("#MstDesc").val();
                _MstParentId = parseInt($("#MstParentId").val());
                _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId };

            }
            else if (parseInt($("#MstParentId").val()) == 7) {
                url = CreateMasterTableDetailURL;
                _MstDesc = $("#MstDesc").val();
                _MstParentId = 567;
                _Remarks = "1";
                _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId, Remarks: _Remarks };

            }
            else {
                url = CreateMasterTableDetailURL;
                _MstDesc = $("#MstDesc").val();
                _MstParentId = parseInt($("#MstParentId").val());
                _parameters = { Mst_Desc: _MstDesc, MstParentId: _MstParentId };

            }
            console.log(parseInt($("#MstParentId").val()));
            console.log($("#MstDesc").val());

            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: JSON.stringify(_parameters),
                url: url,
                success: function (Result) {

                    if (Result.Message == "Success") {
                        var newOption = new Option(Result.name, Result.id, true, true);
                        DDLToAppend.append(newOption).trigger('change');
                        $('#modal-AddMasterValue').modal('hide');

                    }
                    else {
                        $('#modal-AddMasterValue').modal('hide');
                        Swal.fire({
                            type: "error",
                            title: 'Error...',
                            html: Result.ErrorMessage
                        });
                    }
                }
            });
        }
        else {
            // Failed show errors
            console.log("Failed errors");
            Swal.fire({
                type: "error",
                title: 'Error...',
                html: 'Please Enter Description of List'
            });
        }
    }

    function AddPaymentVoucher() {
        console.log("Function AddPaymentVoucher Called!!");
    }

    function GetEnforcementDetail() {
        console.log(parseInt($("#HFCaseId").val()));
        console.log($("#EnforcementDispute").val());
        var _CaseId = parseInt($("#HFCaseId").val());
        var _EnforcemetDispute = $("#EnforcementDispute").val();

        _parameters = { CaseId: _CaseId, EnforcemetDispute: _EnforcemetDispute };
            $.ajax({
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                data: JSON.stringify(_parameters),
                url: GetEnforcementDetailURL,
                success: function (Result) {
                    console.log(Result);
                    console.log(Result.EnforcementNo);
                    console.log(Result.EnforcementCourt);
                    //console.log(Result.EnforcementCourt.length);

                    if (Result.EnforcementNo != "") {
                        $('#dispENFNO').val(Result.EnforcementNo);
                        $('#dispENFCOURT').val(Result.EnforcementCourt);
                    }
                    else {

                        //Swal.fire({
                        //    type: "error",
                        //    title: 'ENFORCEMENT DETAIL',
                        //    html: 'ENFORCEMENT DETAIL NOT FOUND IN DATABASE, CREATE ENFORCEMENT DETAIL'
                        //});
                        $('#dispENFNO').val("");
                        $('#dispENFCOURT').val("");
                    }

                    //$("#OfficeFileNo").removeAttr("disabled");
                    //$("#btnCaseSearch").removeAttr("disabled");
                },
                error: function (response) {
                    console.log("error");

                    console.log(response.responseText);
                },
                failure: function (response) {
                    console.log("failure");
                    console.log(response.responseText);
                }
            });
        }

    function LoadFileStatus(p_Id, selectId) {
        console.log(p_Id);

        _parameters = { Id: p_Id };
        $.ajax({
            type: "POST",
            contentType: "application/json; charset=utf-8",
            dataType: 'json',
            data: JSON.stringify(_parameters),
            url: LoadFileStatusURL,
            success: function (Result) {
                console.log(Result);
                console.log(Result.length);

                if (Result.length > 0) {
                    var $select = $("#" + selectId);

                    $select.find('option').remove();

                    for (var i = 0; i < Result.length; i++) {
                        key = Result[i].Mst_Value;
                        value = Result[i].Mst_Desc;

                        $select.append('<option value=' + key + '>' + value + '</option>');
                    }
                    $select.val("0");

                    if (p_Id == "E")
                        GetEnforcementDetail();
                }
                else {
                    var $select = $("#" + selectId);
                    $select.find('option').remove();
                }
            },
            error: function (response) {
                console.log("error");

                console.log(response.responseText);
            },
            failure: function (response) {
                console.log("failure");
                console.log(response.responseText);
            }
        });
    }


    $(document).ready(function () {

        /********************** FOR CREATION START HERE ********************************/
        console.log("Case Registration Partail View Loaded");
        $.fn.autoResize = function () {
            let r = e => {
                e.style.height = '';
                e.style.height = e.scrollHeight + 'px'
            };
            return this.each((i, e) => {
                e.style.overflow = 'hidden';
                r(e);
                $(e).bind('input', e => {
                    r(e.target);
                })
            })
        };
        $('textarea').autoResize();

        $('.datepicker').datepicker({
            format: "dd/mm/yyyy",
            todayBtn: "linked",
            clearBtn: true,
            autoclose: true,
            orientation: "bottom auto"
        });
        $('.select2bs4').select2({
            theme: 'bootstrap4'
        });
        bsCustomFileInput.init();

        var AlphaNumericSpecial = new RegExp(/^[-@@.\/#&+()\[\]\w\s]*$/);

        $("#FileStatusRemarks").regexMask(AlphaNumericSpecial);

        $("#ActionDate").datepicker({ format: "dd/mm/yyyy" });

        //$("#ActionDate").datepicker("setDate", new Date());

        $('.AddNewMaster').on("click", function () {
            console.log(this.id);
            console.log($(this).val());
            var ModalTitle = "";


            if (this.id == "4") {
                ModalTitle = "Add Court Registration";
                DDLToAppend = $("#CourtRegistration");
                $("#MstParentId").val(this.id);
            }
            else if (this.id == "btn_RegCourt") {
                ModalTitle = "Add Court";
                DDLToAppend = $("#CourtReg_RegCourt");
                $("#MstParentId").val("4");
            }
            else if (this.id == "7") {
                ModalTitle = "Add Payment Head";
                DDLToAppend = $("#Payment_Head");
            }
            else if (this.id == "214") {
                ModalTitle = "Add Pay To";
                DDLToAppend = $("#Payment_To");
            }

            $("#ModalTitle").text(ModalTitle);

            $('#modal-AddMasterValue').modal('show');

        });

        $("#EnforcementDispute").on("change", function () {
            $("#lblJudgementDate").text("");
            $("#divJudgementDate").val("");
            $("#divJudgementDate").removeClass("AppHidden").addClass("AppHidden");
            if (this.value == "1" || this.value == "3") {
                $("#lblJudgementDate").text("DATE OF RECEIPT DECISION");
                $("#divJudgementDate").removeClass("AppHidden");

            }
            else if (this.value == "2" || this.value == "4") {
                $("#lblJudgementDate").text("PRIMARY JUDGEMENT DATE");
                $("#divJudgementDate").removeClass("AppHidden");
            }
            //GetEnforcementDetail();

        });

        $("#ActionLevel").on("change", function () {
            console.log("ActionLevel Change");
            console.log(this.value);
            /*
             RESET FILE STATUS
            */
            console.log($("#txtFrmMode").val());
            console.log($("#txtActionLevel").val());
            console.log($("#txtFileStatus").val());


            console.log($("#ActionLevel").val());
            console.log($("#FileStatus").val());


            if ($("#txtFrmMode").val() == "E" && $("#txtActionLevel").val() == $("#ActionLevel").val() && $("#txtFileStatus").val() == $("#FileStatus").val()) {
                window.location.reload();
            }
            else {
                $("#DivFileStatusDetail").removeClass("AppHidden").addClass("AppHidden");
                $("#2").removeClass("AppHidden").addClass("AppHidden");
                $("#4").removeClass("AppHidden").addClass("AppHidden");
                $("#7").removeClass("AppHidden").addClass("AppHidden");

                $(".action1").removeClass("AppHidden").addClass("AppHidden");
                $(".action2").removeClass("AppHidden").addClass("AppHidden");
                $(".action3").removeClass("AppHidden").addClass("AppHidden");
                $(".action4").removeClass("AppHidden").addClass("AppHidden");

                $(".cls6").removeClass("AppHidden").addClass("AppHidden");
                $(".clsPAS").removeClass("AppHidden").addClass("AppHidden");
                $(".clsPA").removeClass("AppHidden").addClass("AppHidden");
                $(".clsP").removeClass("AppHidden").addClass("AppHidden");
                $(".cls8").removeClass("AppHidden").addClass("AppHidden");
                $(".clsE").removeClass("AppHidden").addClass("AppHidden");
                $("#lblFileStatusRemarks").text("");
                $("#FileStatusRemarks").off();
                $("#FileStatusRemarks").val("");
                var AlphaNumericSpecial = new RegExp(/^[-@@.\/#&+()\[\]\w\s]*$/);
                $("#FileStatusRemarks").regexMask(AlphaNumericSpecial);
                /*
                 * END RESET FILE STATUS
                 */

                $("#DivAppealDeptt").removeClass("AppHidden").addClass("AppHidden");
                $("#DivActionLevelDetail").removeClass("AppHidden").addClass("AppHidden");
                $("#divReceptionDate").removeClass("AppHidden").addClass("AppHidden");
                $("#divJudgementDate").removeClass("AppHidden").addClass("AppHidden");
                $("#divEnforcementDispute").removeClass("AppHidden").addClass("AppHidden");
                $("#lblJudgementDate").text("");
                $("#lblCourtRegistration").text("");

                $(".action" + this.value).removeClass("AppHidden");

                if (this.value == "1") {
                    $("#divReceptionDate").removeClass("AppHidden");
                    $("#lblCourtRegistration").text("PRIMARY COURT");
                    $("#SpanActionLevelTitle").text("NEW CASES");
                    $("#h3ActionLevelTitle").removeClass("CaseRegAppealActive CaseRegSupremeActive").addClass("CaseRegNewCaseActive");
                    LoadFileStatus("N", "FileStatus");

                }
                else if (this.value == "2") {
                    $("#DivAppealDeptt").removeClass("AppHidden");
                    $("#divJudgementDate").removeClass("AppHidden");
                    $("#lblJudgementDate").text("PRIMARY JUDGEMENT DATE");
                    $("#lblCourtRegistration").text("APPEAL COURT");
                    $("#SpanActionLevelTitle").text("APPEAL");
                    $("#h3ActionLevelTitle").removeClass("CaseRegNewCaseActive CaseRegSupremeActive").addClass("CaseRegAppealActive");
                    LoadFileStatus("A", "FileStatus");

                }
                else if (this.value == "3") {
                    $("#divJudgementDate").removeClass("AppHidden");
                    $("#lblJudgementDate").text("APPEAL JUDGEMENT DATE");
                    $("#lblCourtRegistration").text("SUPREME COURT");
                    $("#SpanActionLevelTitle").text("SUPREME");
                    $("#h3ActionLevelTitle").removeClass("CaseRegNewCaseActive CaseRegAppealActive").addClass("CaseRegSupremeActive");
                    $("#CourtRegistration").val("1").trigger('change');
                    LoadFileStatus("S", "FileStatus");
                }
                else if (this.value == "4") {
                    $(".clsE").removeClass("AppHidden");
                    $("#divEnforcementDispute").removeClass("AppHidden");
                    $("#lblCourtRegistration").text("COURT REGISTRATION");
                    $("#SpanActionLevelTitle").text("ENFORCEMENT");
                    $("#h3ActionLevelTitle").removeClass("CaseRegNewCaseActive CaseRegAppealActive CaseRegSupremeActive");
                    LoadFileStatus("E", "FileStatus");
                }

                if (this.value == "0") {
                    $("#DivActionLevelDetail").removeClass("AppHidden").addClass("AppHidden");
                }
                else
                    $("#DivActionLevelDetail").removeClass("AppHidden");

                $("#AdminFile").val("");
                $("#DepartmentType").val("0").trigger('change');
                $("#UrgentCaseDays").val("");
                $("#CourtDetailRegistered").prop("checked", false);
                $("#OfficeProcedure").val("");
                $("#MainRemarks").val("");
                $("#ActionDate").datepicker("setDate", new Date());
                //$("#FormPrintJugDate").val("");
                //$("#FormPrintDefendant").val("");
                //$("#FormPrintLastDate").val("");
                //$("#FormPrintWorkRequired").val("");

            }
        });

        $("#FileStatus").on("change", function () {
            console.log("FileStatus Change");
            console.log(this.value);

            if ($("#txtFrmMode").val() == "E" && $("#txtActionLevel").val() == $("#ActionLevel").val() && $("#txtFileStatus").val() == $("#FileStatus").val()) {
                window.location.reload();
            }
            else {
                if (parseInt($("#ActionLevel").val()) <= 0) {
                    Swal.fire({
                        type: "error",
                        title: 'ERROR...',
                        html: 'PLEASE SELECT ACTION LEVEL'
                    });
                    return false;
                }
                else {
                    $("#DivFileStatusDetail").removeClass("AppHidden").addClass("AppHidden");
                    $("#2").removeClass("AppHidden").addClass("AppHidden");
                    $("#4").removeClass("AppHidden").addClass("AppHidden");
                    $("#7").removeClass("AppHidden").addClass("AppHidden");
                    $("#9").empty();
                    $("#10").empty();
                    $("#PaymentVoucherContainer").empty();
                    $("#DivCourtInfo").empty();
                    $(".cls6").removeClass("AppHidden").addClass("AppHidden");
                    $(".clsPAS").removeClass("AppHidden").addClass("AppHidden");
                    $(".clsPA").removeClass("AppHidden").addClass("AppHidden");
                    $(".clsP").removeClass("AppHidden").addClass("AppHidden");
                    $(".cls8").removeClass("AppHidden").addClass("AppHidden");
                    $("#lblFileStatusRemarks").text("");
                    $("#FileStatusRemarks").off();
                    $("#FileStatusRemarks").val("");
                    var AlphaNumericSpecial = new RegExp(/^[-@@.\/#&+()\[\]\w\s]*$/);
                    $("#FileStatusRemarks").regexMask(AlphaNumericSpecial);
                    $("#ActionDate").datepicker("setDate", new Date());


                    if (this.value == "2") {
                        $("#DivFileStatusDetail").removeClass("AppHidden");
                        $("#2").removeClass("AppHidden");
                        $("#SpanFileStatusTitle").text("LEGAL NOTICE");
                    }
                    else if (this.value == "4") {
                        $("#DivFileStatusDetail").removeClass("AppHidden");
                        $("#4").removeClass("AppHidden");
                        $("#lblFileStatusRemarks").text("ON HOLD REASON");
                        $("#SpanFileStatusTitle").text("ON HOLD");

                    }
                    else if (this.value == "6") {
                        $("#DivFileStatusDetail").removeClass("AppHidden");
                        $(".cls6").removeClass("AppHidden");

                        if ($("#ActionLevel").val() == "1") {
                            $(".clsP").removeClass("AppHidden");

                            var _Mode = "C";
                            var _PartialViewName = "_CaseRegCaseManagementInfo";
                            var _CaseId = parseInt($("#HFCaseId").val());
                            var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());

                            var PartialContainer = $("#DivCourtInfo");
                            _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

                            GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);
                        }

                        if ($("#ActionLevel").val() == "1" || $("#ActionLevel").val() == "2")
                            $(".clsPA").removeClass("AppHidden");

                        if ($("#ActionLevel").val() == "1" || $("#ActionLevel").val() == "2" || $("#ActionLevel").val() == "3") {
                            if ($('input[name="RealEstateYesNo"]:checked').val() == "Y") {
                                $(".clsRealEstate").removeClass("AppHidden");
                            }
                            $(".clsPAS").removeClass("AppHidden");
                        }


                        $("#lblFileStatusRemarks").text("ELECTRONIC NO.");
                        $("#SpanFileStatusTitle").text("ONLINE SUBMISSION");
                    }
                    else if (this.value == "7") {
                        $("#DivFileStatusDetail").removeClass("AppHidden");
                        $("#7").removeClass("AppHidden");
                        $("#SpanFileStatusTitle").text("COURT REQUEST");

                    }
                    else if (this.value == "8") {
                        $("#DivFileStatusDetail").removeClass("AppHidden");
                        $(".cls8").removeClass("AppHidden");
                        $("#lblFileStatusRemarks").text("FEE");
                        var IsDigitmask = new RegExp(/^\d*\.?(?:\d{1,3})?$/);
                        $("#FileStatusRemarks").regexMask(IsDigitmask);
                        $("#SpanFileStatusTitle").text("PAYMENT");

                        console.log(parseInt($("#txtCaseRegisterId").val()));

                        var _PartialViewName = "_CaseRegPayVoucher";
                        var _CaseId = parseInt($("#HFCaseId").val());
                        var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());
                        var _Mode = _CaseRegisterId == 0 ? "C" : "E";

                        var PartialContainer = $("#PaymentVoucherContainer");
                        _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

                        GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);

                        $("#PaymentVoucherContainer").removeClass("AppHidden");
                    }
                    else if (this.value == "9") {
                        if (parseInt($("#txtCaseRegisterId").val()) > 0) {
                            $("#DivFileStatusDetail").removeClass("AppHidden");
                            $("#9").removeClass("AppHidden");
                            $("#SpanFileStatusTitle").text("REGISTERED");

                            var _PartialViewName = $("#ActionLevel").val() == "4" ? "_CaseRegEnforcement" : "_CaseRegCourtInfo";
                            var _CaseId = parseInt($("#HFCaseId").val());
                            var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());
                            var _Mode = _CaseRegisterId == 0 ? "C" : "E";

                            var PartialContainer = $("#9");
                            _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

                            GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);
                        }
                        else {
                            Swal.fire({
                                type: "error",
                                title: 'ERROR...',
                                html: 'PLEASE FIRST REGISTER CASE'
                            });
                            $(this).val("0");
                            return false;
                        }
                    }
                    else if (this.value == "10") {
                        if (parseInt($("#txtCaseRegisterId").val()) > 0) {
                            $("#DivFileStatusDetail").removeClass("AppHidden");
                            $("#10").removeClass("AppHidden");
                            $("#SpanFileStatusTitle").text("BEFORE COURT REG.");

                            var _PartialViewName = "_CaseRegBeforeCourt";
                            var _CaseId = parseInt($("#HFCaseId").val());
                            var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());
                            var _Mode = _CaseRegisterId == 0 ? "C" : "E";

                            var PartialContainer = $("#10");
                            _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

                            GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);
                        }
                        else {
                            Swal.fire({
                                type: "error",
                                title: 'ERROR...',
                                html: 'PLEASE FIRST REGISTER CASE'
                            });
                            $(this).val("0");
                            return false;
                        }
                    }
                }
            }
        });

        $(".action" + $("#ActionLevel").val()).removeClass("AppHidden");

        if ($("#FileStatus").val() == "6") {
            if ($("#ActionLevel").val() == "1") {
                $(".clsP").removeClass("AppHidden");

                var _Mode = "C";
                var _PartialViewName = "_CaseRegCaseManagementInfo";
                var _CaseId = parseInt($("#HFCaseId").val());
                var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());

                var PartialContainer = $("#DivCourtInfo");
                _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

                GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);
            }
        }

        if ($("#FileStatus").val() == "8") {
            $("#FileStatusRemarks").off();
            var IsDigitmask = new RegExp(/^\d*\.?(?:\d{1,3})?$/);
            $("#FileStatusRemarks").regexMask(IsDigitmask);

            var _PartialViewName = "_CaseRegPayVoucher";
            var _CaseId = parseInt($("#HFCaseId").val());
            var _CaseRegisterId = parseInt($("#txtCaseRegisterId").val());
            var _Mode = _CaseRegisterId == 0 ? "C" : "E";

            var PartialContainer = $("#PaymentVoucherContainer");
            _parameters = { Mode: _Mode, PartialViewName: _PartialViewName, CaseId: _CaseId, CaseRegisterId: _CaseRegisterId };

            GetTab(PartialContainer, GetCaseRegistrationURL, _parameters);
        }

        /********************** FOR CREATION END   HERE ********************************/

        $('input[type=radio][name=RealEstateYesNo]').change(function () {
            console.log("rdoRealEstate Change");
            console.log(this.value);

            $(".clsRealEstate").removeClass("AppHidden").addClass("AppHidden");
            if (this.value == "Y")
                $(".clsRealEstate").removeClass("AppHidden");
        });

        //$("#CourtDecision").change(function () {
        //    $("#CurrentHearingDate").datepicker("setDate", new Date());
        //});

        $("#txtRequirement").removeClass("AppHidden").addClass("AppHidden");
        $("#txtFirstEmailDate").removeClass("AppHidden").addClass("AppHidden");
        $("#DIV_TRSOURCE").removeClass("AppHidden").addClass("AppHidden");

        if ($('#ClientReply').val() == "1") {
            $("#txtRequirement").removeClass("AppHidden");
            $("#txtFirstEmailDate").removeClass("AppHidden");

            console.log($("#Requirements").val());
            console.log($("#FirstEmailDate").val());

            $("#hidRequirement").val($("#Requirements").val());
            $("#hidFirstEmailDate").val($("#FirstEmailDate").val());

            console.log($("#hidRequirement").val());
            console.log($("#hidFirstEmailDate").val());

            $('textarea').autoResize();

            if ($("#FirstEmailDate").val() == "") {
                $("#FirstEmailDate").datepicker("setDate", new Date());
            }
        }

        if ($('#TransportationFee').val() == "1") {
            $("#DIV_TRSOURCE").removeClass("AppHidden");
        }

        $('#ClientReply').on("change", function () {
            $("#txtRequirement").removeClass("AppHidden").addClass("AppHidden");
            $("#txtFirstEmailDate").removeClass("AppHidden").addClass("AppHidden");

            if ($('#ClientReply').val() == "1") {
                $("#txtRequirement").removeClass("AppHidden");
                $("#txtFirstEmailDate").removeClass("AppHidden");

                $('textarea').autoResize();

                if ($("#Requirements").val() == "" && $("#FirstEmailDate").val() == "") {
                    console.log($("#hidRequirement").val());
                    console.log($("#hidFirstEmailDate").val());
                    $("#Requirements").val($("#hidRequirement").val());
                    $("#FirstEmailDate").datepicker("setDate", $("#hidFirstEmailDate").val());
                }
            }
            else {
                $("#FirstEmailDate").val("");
                $("#Requirements").val("");
            }
        });

        $("#hidNextHearingDate").val($("#NextHearingDate").val());
        $("#hidCurrentHearingDate").val($("#CurrentHearingDate").val());

        $('#CourtDecision').bind('input propertychange', function () {
            $("#hidCourtDecisionChange").val("N");

            if (this.value.length) {
                $("#hidCourtDecisionChange").val("Y");
            }
        });

        $("#CurrentHearingDate").datepicker({
            todayBtn: 1,
            autoclose: true,
            format: "dd/mm/yyyy",
        }).on('changeDate', function (selected) {
            if ($("#hidCurrentHearingDate").val() == $("#CurrentHearingDate").val()) {

            }
            else {
                if ($('#TransportationFee').val() == "1") {
                    $("#TransportationSource").val("0").trigger('change');
                }
            }
        });
    });

</script>
@model YandS.UI.Models.CaseRegistrationVM
@{
    ViewBag.OFB_ClientName = Model.ClientName;
    ViewBag.OFB_Defendant = Model.Defendant;
    ViewBag.OFB_OfficeFileNo = Model.OfficeFileNo;
    ViewBag.OFB_SessionRollClientName = Model.SessionRollClientName;
    ViewBag.OFB_SessionRollDefendentName = Model.SessionRollDefendentName;

}
<div id="div-CaseDetail" style="padding-bottom:1rem" class="@ViewBag.CaseDetailClass">
    @Html.Partial("_OfficeFileInfoBanner")
</div>
<div class="form-horizontal">
    <div class="row">
        @Html.HiddenFor(model => model.CaseRegistrationId)
        @Html.HiddenFor(model => model.CaseId)
        @Html.HiddenFor(model => model.TransportationFee)

        <div class="col-sm-3">
            <div class="form-group">
                <label for="dispACCNO">A/C No.</label>
                <input id="dispACCNO" type="text" class="form-control" value="@ViewBag.dispACCNO" disabled>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label for="dispCFNO">CLIENT FILE No.</label>
                <input id="dispCFNO" type="text" class="form-control" value="@ViewBag.dispCFNO" disabled>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.ActionLevel)
                @Html.DropDownList("ActionLevel", null, htmlAttributes: new { @class = "form-control select2bs4" })
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                @Html.LabelFor(model => model.FileStatus)
                @Html.DropDownList("FileStatus", null, htmlAttributes: new { @class = "form-control select2bs4" })
            </div>
        </div>
    </div>
    <div id="DivActionLevelDetail" class="card card-primary @ViewBag.DivActionLevelDetail">
        <div id="h3ActionLevelTitle" class="text-center card-header @ViewBag.h3ActionLevelTitle">
            <h3 style="float:none !important" class="card-title"><span id="SpanActionLevelTitle">@ViewBag.SpanActionLevelTitle</span></h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-sm-3 clsE @ViewBag.divEnforcementDispute">
                    <div class="form-group">
                        <label for="dispENFNO">ENFORCEMENT NO</label>
                        <input id="dispENFNO" type="text" class="form-control" value="@ViewBag.dispENFNO" disabled>
                    </div>
                </div>
                <div class="col-sm-3 clsE @ViewBag.divEnforcementDispute">
                    <div class="form-group">
                        <label for="dispENFCOURT">COURT</label>
                        <input id="dispENFCOURT" type="text" class="form-control" value="@ViewBag.dispENFCOURT" disabled>
                    </div>
                </div>

                <div class="col-sm-3 clsE @ViewBag.divEnforcementDispute">
                    <div id="divEnforcementDispute" class="form-group">
                        @Html.LabelFor(model => model.EnforcementDispute)
                        @Html.DropDownList("EnforcementDispute", null, htmlAttributes: new { @class = "form-control select2bs4" })
                    </div>
                </div>
                <div class="col-sm-3">

                    <div id="divReceptionDate" class="form-group @ViewBag.divReceptionDate">
                        <label for="ReceptionDate">RECEIVED DATE</label>
                        @Html.EditorFor(model => model.ReceptionDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                    <div id="divJudgementDate" class="form-group @ViewBag.divJudgementDate">
                        <label for="JudgementDate"><span id="lblJudgementDate">@ViewBag.lblJudgementDate</span></label>
                        @Html.EditorFor(model => model.JudgementDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>


                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ActionDate)
                        @Html.EditorFor(model => model.ActionDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="AdminFile">ADMIN</label>
                        @Html.EditorFor(model => model.AdminFile, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div id="DivAppealDeptt" class="col @ViewBag.DivAppealDeptt">
                    <div class="form-group">
                        <label for="DepartmentType">DEPARTMENT TYPE</label>
                        @Html.DropDownList("DepartmentType", null, htmlAttributes: new { @class = "form-control select2bs4" })
                    </div>
                </div>
                <div class="col">
                    <div class="col-sm-12">
                        <div class="row">
                            @Html.LabelFor(model => model.UrgentCaseDays)
                            <div class="input-group mb-3">
                                @Html.EditorFor(model => model.UrgentCaseDays, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <div class="col-sm-3">
                                        <div class="form-group" style="padding-top:10px;">
                                            <div class="icheck-primary d-inline">
                                                @Html.CheckBoxFor(model => model.CourtDetailRegistered)
                                                <label for="CourtDetailRegistered">NOW</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="OfficeProcedure">NOTES</label>
                        @Html.TextAreaFor(model => model.OfficeProcedure, 5, 200, new { @class = "form-control", @placeholder = "Please Enter Notes" })
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group">
                        <label for="OfficeProcedure">REMARK</label>
                        @Html.TextAreaFor(model => model.MainRemarks, 5, 200, new { @class = "form-control", @placeholder = "Please Enter Remarks   " })
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div id="DivFileStatusDetail" class="card card-success @ViewBag.DivFileStatusDetail">
        <div id="h3FileStatusTitle" class="text-center card-header">
            <h3 style="float:none !important" class="card-title"><span id="SpanFileStatusTitle">@ViewBag.SpanFileStatusTitle</span></h3>
        </div>
        <div class="card-body">
            <div id="2" class="row @ViewBag.Div2">
                <div class="col">
                    <div class="form-group">
                        <label for="ReceptionDate">SENT DATE</label>
                        @Html.EditorFor(model => model.SendDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>
                <div class="col">
                    <div class="col-sm-12">
                        <div class="row">
                            <label for="ReceptionDate">OMAN POSTE NO.</label>
                            <div class="input-group mb-3">
                                @Html.EditorFor(model => model.OmanPostNo, new { htmlAttributes = new { @class = "form-control" } })
                                <div class="input-group-append">
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="upload" name="upload">
                                        <label class="custom-file-label" for="upload"> Attach</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @if (@ViewBag.OmanPostDoc == "#")
                {
                }
                else
                {
                    <div class="col" style="padding-top:30px;">
                        <div class="form-group">
                            <a target="_blank" class="btn btn-outline-warning" title="VIEW OMAN POST ATTACHED DOCUMENT" href="~/Uploads/OmanPost/@ViewBag.OmanPostDoc">VIEW</a>
                        </div>
                    </div>
                }

                <div class="col">
                    <div class="form-group">
                        <label for="ReceptionDate">REMINDER DATE</label>
                        @Html.EditorFor(model => model.FirstReminderDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>
            </div>

            <div id="4" class="row @ViewBag.Div4">
                <div class="col-sm-5">
                    <div class="form-group">
                        <label for="OnHoldReasonDDL">REASON</label>
                        @Html.DropDownList("OnHoldReasonDDL", null, htmlAttributes: new { @class = "form-control select2bs4" })
                    </div>
                </div>
            </div>

            <div id="7" class="row @ViewBag.Div7">
                <div class="col-sm-12">
                    <div class="form-group">
                        <label for="CourtMessage">COURT REQUEST</label>
                        @Html.TextAreaFor(model => model.CourtMessage, 5, 200, new { @class = "form-control", @placeholder = "Please Enter Court Request" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-3 clsPA @ViewBag.clsPA">
                    <div class="col-sm-12">
                        <div class="row">
                            <label for="CourtRegistration"><span id="lblCourtRegistration">@ViewBag.lblCourtRegistration</span></label>
                            <div class="input-group mb-3">
                                @Html.DropDownList("CourtRegistration", null, htmlAttributes: new { @class = "form-control select2bs4" })
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-info AddNewMaster" id="4">
                                        Add
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-5 cls8 cls6 @ViewBag.cls8cls6">
                    <div class="form-group">
                        <label for="FileStatusRemarks"><span id="lblFileStatusRemarks">@ViewBag.lblFileStatusRemarks</span></label>
                        @Html.EditorFor(model => model.FileStatusRemarks, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col-sm-4 clsP @ViewBag.clsP">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CourtReg_ClaimAmount)
                        @Html.EditorFor(model => model.CourtReg_ClaimAmount, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div style="padding-top:10px;padding-left:5px;" class="col-sm-8 clsPAS @ViewBag.clsPAS">
                    <div class="form-group">
                        <label for="OfficeProcedure">CLAIM SUMMARY</label>
                    </div>
                </div>
                <div style="padding-top:10px;" class="col-sm-2 clsPAS @ViewBag.clsPAS">
                    <div class="form-group text-right">
                        <label for="OfficeProcedure">REAL ESTATE DETAIL</label>
                    </div>
                </div>
                <div class="col-sm-2 clsPAS @ViewBag.clsPAS">
                    <div style="color: black !important;padding-top:10px;" class="text-left">
                        <div class="icheck-primary d-inline">
                            @Html.RadioButtonFor(m => m.RealEstateYesNo, "Y", new { id = "radioRealEstate1" })
                            <label for="radioRealEstate1">YES</label>
                        </div>
                        <div class="icheck-primary d-inline">
                            @Html.RadioButtonFor(m => m.RealEstateYesNo, "N", new { id = "radioRealEstate2" })
                            <label for="radioRealEstate2">NO</label>
                        </div>
                    </div>
                </div>
                <div class="col-sm-8 clsPAS @ViewBag.clsPAS">
                    <div class="form-group">
                        @Html.TextAreaFor(model => model.ClaimSummary, 3, 200, new { @class = "form-control", @placeholder = "Please Enter Claim Summary   " })
                    </div>
                </div>
                <div class="col-sm-4 clsPAS @ViewBag.clsPAS">
                    <div class="form-group clsRealEstate @ViewBag.clsRealEstate">
                        @Html.TextAreaFor(model => model.RealEstateDetail, 3, 200, new { @class = "form-control", @placeholder = "Please Enter Real Estate Detail   " })
                    </div>
                </div>
                @if (User.IsInRole("VoucherApproval") || User.Identity.Name.Equals("6"))
                {
                    <div class="col-sm-3 cls8 @ViewBag.cls8">
                        <label for="PaymentDate">PAID DATE</label>
                        @Html.EditorFor(model => model.PaymentDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                }
            </div>
            <div id="DivCourtInfo"></div>
            <div id="9"></div>
            <div id="10"></div>
        </div>
    </div>
    <div id="DIV_UPDATE" class="row @ViewBag.DIV_UPDATE">
        <div class="col-sm-12">
            <div style="padding-bottom:0px !important;padding-top:10px;" class="UpdateBoxBar">
                <div class="row">
                    <div class="col-sm-12 text-center"><h3>UPDATE التحديث</h3></div>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-sm-2">
                        <div class="form-group">
                            <label for="CurrentHearingDate">UPDATE DATE تاريخ التحديث</label>
                            @Html.EditorFor(model => model.CurrentHearingDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        </div>
                    </div>
                    <div class="col-sm-8">
                        <div class="form-group">
                            <label for="CourtDecision">COURT DECISION قرار المحكمة</label>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.CourtDecision, 1, 200, new { @class = "form-control", @dir = "auto" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group AppHidden">
                            <label for="NextHearingDate">NEXT HEARING DATE موعد الجلسة القادمة</label>
                            @Html.EditorFor(model => model.NextHearingDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-sm-2">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientReply)
                            @Html.DropDownList("ClientReply", null, htmlAttributes: new { @class = "form-control select2bs4" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group" id="txtRequirement">
                            <label for="Requirements">REQUIREMENT المطلوب من الموكل</label>
                            <div class="form-group">
                                @Html.TextAreaFor(model => model.Requirements, 1, 200, new { @class = "form-control", @dir = "auto" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="form-group" id="txtFirstEmailDate">
                            @Html.LabelFor(model => model.FirstEmailDate)
                            @Html.EditorFor(model => model.FirstEmailDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        </div>
                    </div>

                    <div class="col-sm-2">
                        <div id="DIV_TRSOURCE" class="form-group">
                            @Html.LabelFor(model => model.TransportationSource)
                            @Html.DropDownList("TransportationSource", null, htmlAttributes: new { @class = "form-control select2bs4" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="card-footer text-right col-sm-11">
                <a title="PRINT FORM" id="RequirementPrintFormButton" class="btn btn-success" target="_blank" href="/SessionRoll/PrintRequirementForm/?id=@Model.CaseId&formName=_PrintRequirementForm">REPORT</a>
            </div>
        </div>
    </div>

    @if (User.IsInRole("VoucherApproval") || User.Identity.Name.Equals("6"))
    {
        <div id="PaymentVoucherContainer" class="@ViewBag.PaymentVoucherContainer"></div>
    }

    <div class="card card-light">
        <div class="card-header">
            <h3 class="card-title">
                FORM PRINTING
            </h3>
            <div class="card-tools @ViewBag.PrintFormButton">
                @*<button title="PRINT FORM" class="btn btn-flat btn-sm bg-success" onclick="location.href='@Url.Action("PrintForm", "CaseRegistration", new { id = Model.CaseRegistrationId })';return false;">PRINT FORM</button>*@
                <a title="PRINT FORM" id="PrintFormButton" class="btn btn-flat btn-sm bg-success" target="_blank" href="/CaseRegistration/PrintForm/@Model.CaseRegistrationId">PRINT FORM</a>

            </div>
        </div>
        <div class="card-body action1 action2 action3 action4 AppHidden">
            <div class="row">
                <div class="col action2 action3 action4 AppHidden">
                    <div class="form-group">
                        <label for="FormPrintDefendant">JUG. DATE</label>
                        @Html.EditorFor(model => model.FormPrintJugDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        <label for="FormPrintDefendant">DEFENDANT</label>
                        @Html.EditorFor(model => model.FormPrintDefendant, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="FormPrintLastDate">LAST DATE</label>
                        @Html.EditorFor(model => model.FormPrintLastDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label for="FormPrintWorkRequired">WORK REQUIRED</label>
                        @Html.EditorFor(model => model.FormPrintWorkRequired, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <input type="hidden" id="txtActionLevel" value="@ViewBag.ActionLevelValue" />
    <input type="hidden" id="txtFileStatus" value="@ViewBag.FileStatusValue" />
    <input type="hidden" id="txtFrmMode" value="@ViewBag.FrmMode" />
    <input type="hidden" id="hidNextHearingDate" value="" />
    <input type="hidden" id="hidCurrentHearingDate" value="" />
    <input type="hidden" id="hidCourtDecisionChange" value="" />

</div>
